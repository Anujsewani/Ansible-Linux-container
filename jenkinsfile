def final_image="sewani/ansible_linux"
def tag= "latest"
def network_name="ansiblelinuxcontainer_net"
pipeline{
	agent any
	environment{
		Dockerhub_Credentials=credentials("Docker")
		}
	stages{
		
		stage("docker build"){
			steps{
				script{
					sh"docker-compose up -d "
					}
				}
			}
		stage("docker login"){
			steps{
				script{
					sh "echo $Dockerhub_Credentials_PSW | docker login -u $Dockerhub_Credentials_USR --password-stdin"
					}
				}
			}
		stage("docker push"){
			steps{
				script{
					sh "docker push ${final_image}:${tag}"
					}
				}
			}
		stage("create network"){
                        steps{
                                script{
					sh "docker network  inspect ${network_name}"
                                        }                                       
                                }
			}

		stage("setup ansible server"){
			steps{
				script{
					sh "docker cp ansible/hosts ansible-server-container:/etc/ansible/hosts"
					sh "docker cp ansible/playbook.yml ansible-server-container:/etc/ansible/"
					sh "docker cp ansible/ansible.cfg ansible-server-container:/etc/ansible/"
					sh "docker exec ansible-server-container ansible-playbook /etc/ansible/playbook.yml -i /etc/ansible/hosts"
					}
				}
			}
		stage("cleanup"){
			steps{
				script{
					sh"docker stop ansible-server-container ansible-node-container"
					sh"docker rm ansible-server-container ansible-node-container"
					sh"docker network rm ${network_name}"
					}
				}
			}
		}
	}
	
